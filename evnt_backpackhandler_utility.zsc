extend class BackpackHandler
{
	// Converter for string values to whole decimal numbers.
	static int stringtoint(string candidate)
	{
		int i, j;
		int result;
		int sign = 1;
		int unconverted;
		int candidatelength = candidate.length();
		string temp;
		
		// Iterates over a string and converts it
		// from ascii bytes to numbers.
		
		if(candidate.indexof("-") == 0)
		{
			candidate.remove(0,1);
			candidatelength -= 1;
			sign = -1;
		}
		
		if(!candidatelength)return int.min;
		
		for(i=0; i<candidatelength;i++)
		{
			temp = candidate.mid((candidatelength-1)-i);
			unconverted = temp.byteat(0);
			
			if(unconverted < 47 || unconverted > 57)
			{
				return int.min;
			}
			
			result += (unconverted - 48) * (10**i);
			candidate.remove((candidatelength-1)-i, 1);
		}
		
		return result * sign;
	}
	
	// Converter for string values to boolean values.
	static int stringtobool(string candidate)
	{
		candidate.makelower();
		if(candidate == "true" || candidate == "t")
		{
			return 1;
		}
		else if(candidate == "false" || candidate == "f")
		{
			return 0;
		}
		return -1;
	}
	
	// Returns cache pointers (or creates them, if one does not exist). 
	BackpackCacher get_cache_pointer(string classname)
	{
		bool makenew = true;
		int checkedindex = 0;
		for(int i = 0; i < backpacktypessize; i++)
		{
			if(BackpackTypes[i].containername == classname)
			{
				makenew = false;
				i = backpacktypessize;
			}
			if(makenew)checkedindex++;
		}

		if(makenew)
		{
			if(pl_debug > 1)console.printf("[PL][Handler] Creating rules entry for "..classname.." at index "..checkedindex..".");
			bbb = BackpackCacher(new('BackpackCacher'));
			bbb.containername   = classname;
			BackpackTypes.push(bbb);
			backpacktypessize++;
		}
		else
		{
			bbb = backpacktypes[checkedindex];
		}

		return bbb;
	}

}